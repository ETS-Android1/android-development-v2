SharedPreferences.OnSharedPreferenceChangeListener listener =
        new SharedPreferences.OnSharedPreferenceChangeListener() {...}

@Override
public void onResume() {
    super.onResume();
    getPreferenceManager().getSharedPreferences().registerOnSharedPreferenceChangeListener(this);
}

@Override
public void onPause() {
    super.onPause();
    getPreferenceManager().getSharedPreferences().unregisterOnSharedPreferenceChangeListener(this);
}

        preferences = PreferenceManager.getDefaultSharedPreferences(this);
        Log.i("Preferences: ", "Decimal places: " + preferences.getString("decimal_places_preference", ""));
        Log.i("Preferences: ", "Default Currency: " + preferences.getString("default_currency_preference", ""));
        Log.i("Preferences: ", "Selected Currencies: " + preferences.getStringSet("selected_currencies_preference", null));


        currencyMasterData.getCurrencyModelMap().entrySet().stream()
                        .filter(entry -> !entry.getKey().equals(defaultPrimaryCurrency)).filter(entry -> currencies.contains(entry.getKey()))
                        .map(Map.Entry::getValue).peek(currencyModel -> currencyModel.setCurrencyAmount(getCurrencyAmount(currencyModel)))
                        .collect(Collectors.toList());